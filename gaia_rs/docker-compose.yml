version: '3.8'

services:

  nginx:
    restart: always
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - .:/gaia_rs
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/gaia_rs/static
      - media_volume:/gaia_rs/media
    depends_on:
      - web
  
  db:
    restart: unless-stopped
    image: postgis/postgis:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432

  redis:
    restart: unless-stopped
    image: redis:latest
    expose:
      - 6379

  web:
    restart: unless-stopped
    build: .
    command: gunicorn gaia_rs.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/gaia_rs
      - static_volume:/gaia_rs/static
      - media_volume:/gaia_rs/media
    expose:
      - 8000
    environment:
      DEBUG: ${DEBUG}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      DJANGO_DB: ${DJANGO_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    depends_on:
      - db
      - redis

  celery:
    restart: unless-stopped
    build: .
    command: celery -A gaia_rs worker -l info
    volumes:
      - .:/gaia_rs
      - static_volume:/gaia_rs/static
      - media_volume:/gaia_rs/media
    environment:
      DEBUG: ${DEBUG}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      DJANGO_DB: ${DJANGO_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    depends_on:
      - db
      - redis

volumes:
  static_volume: {}
  media_volume: {}
  postgres_data: {}